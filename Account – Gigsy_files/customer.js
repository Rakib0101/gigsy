const selectors={customerAddresses:"[data-customer-addresses]",addressCountrySelect:"[data-address-country-select]",deleteAddressButton:"button.address-delete"},attributes={expanded:"aria-expanded",confirmMessage:"data-confirm-message"};function validateStringEmail(email){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(email).toLowerCase())}function validateFormInput(inputElement){const inputType=inputElement.getAttribute("type");let isValid=!1,errorTxt;switch(inputType){case"email":isValid=validateStringEmail(inputElement.value),errorTxt=inputElement.value===""?window.loginStrings.errorEmailRequired:window.loginStrings.errorEmailInvalid;break;case"password":inputElement.id==="CustomerPassword"?(isValid=inputElement.value!=="",errorTxt=window.loginStrings.errorPasswordRequired):(isValid=inputElement.value!==""&&inputElement.value.length>=5,errorTxt=inputElement.value===""?window.loginStrings.errorPasswordRequired:window.loginStrings.errorPasswordTooShort);break;default:isValid=inputElement.value!=="",inputElement.name==="address[country]"&&(isValid=inputElement.value!=="---")}if(!isValid){const fieldWrapper=inputElement.parentElement,hasErrorMessage=fieldWrapper.nextElementSibling?fieldWrapper.nextElementSibling.classList.contains("input-error-message"):null,iconError=fieldWrapper.querySelector(".field-wrapper__icon-error");if(iconError&&iconError.classList.remove("hide"),hasErrorMessage){const errorMsgElm=fieldWrapper.nextElementSibling;(errorMsgElm.nextElementSibling?errorMsgElm.nextElementSibling.classList.contains("requirement-form"):null)&&errorMsgElm.nextElementSibling.classList.add("hide"),errorTxt&&(errorMsgElm.querySelector("span:not(.visually-hidden)").textContent=errorTxt),errorMsgElm.classList.remove("hide")}inputElement.classList.add("input--error"),inputElement.setAttribute("aria_invalid","true"),inputElement.setAttribute("aria_describedby",`${inputElement.id}-error`)}return isValid}function validateForm(formElement){const inputsElm=Array.from(formElement.querySelectorAll("[aria-required]"));let checker=arr=>arr.every(v=>v===!0);const validationArray=inputsElm.map(inputElem=>{const validateGroup=inputElem.dataset.group;if(validateGroup){const checkValues=Array.from(formElement.querySelectorAll(`[data-group='${validateGroup}']`)).map(input=>{const subgroupRequired=input.dataset.groupRequired||null;if(subgroupRequired){const inputSubgroup=Array.from(formElement.querySelectorAll(`[data-group-required='${subgroupRequired}']`));let invalidSubgroup=!1;if(inputSubgroup.forEach(i=>{i.value===""&&(invalidSubgroup=!0)}),invalidSubgroup)return!0}return input.value===""});if(!checker(checkValues))return!0}return validateFormInput(inputElem)});return checker(validationArray)}function removeErrorStyle(inputElem){const fieldWrapper=inputElem.parentElement,hasErrorMessage=fieldWrapper.nextElementSibling?fieldWrapper.nextElementSibling.classList.contains("input-error-message"):null,iconError=fieldWrapper.querySelector(".field-wrapper__icon-error");if(iconError&&iconError.classList.add("hide"),hasErrorMessage){const errorMsgElm=fieldWrapper.nextElementSibling;(errorMsgElm.nextElementSibling?errorMsgElm.nextElementSibling.classList.contains("requirement-form"):null)&&errorMsgElm.nextElementSibling.classList.remove("hide"),errorMsgElm.classList.add("hide")}inputElem.classList.remove("input--error"),inputElem.classList.remove("input--not-error-msg"),inputElem.removeAttribute("aria_invalid"),inputElem.removeAttribute("aria_describedby")}function clearInputErrors(formElement){const inputsElm=formElement.querySelectorAll("[aria-required]"),formMsgErrors=formElement.querySelectorAll(".form-message--error");inputsElm.forEach(inputElm=>{let eventName="keyup";inputElm.tagName==="SELECT"&&(eventName="change"),inputElm.addEventListener(eventName,function(event){const currentInput=inputElm;if(currentInput.classList.contains("input--error")){const validateGroup=currentInput.dataset.group;validateGroup&&Array.from(formElement.querySelectorAll(`[data-group='${validateGroup}']`)).forEach(input=>{removeErrorStyle(input)}),removeErrorStyle(currentInput)}formMsgErrors.length&&formMsgErrors.forEach(formMsgError=>{formMsgError.classList.add("hide"),formMsgError.classList.remove("form-message--success-field")})})})}class CustomerAddresses{constructor(){if(this.elements=this._getElements(),Object.keys(this.elements).length===0)return;if(this._setupCountries(),this._setupEventListeners(),this.elements.container.querySelector(".addresses__edit-forms")){const queryString=window.location.search,addressId=new URLSearchParams(queryString).get("address_id");this.addressForm=this.elements.container.querySelector(`#EditAddress_${addressId}`),this.addressForm&&this.addressForm.classList.remove("hide")}else this.addressForm=this.elements.container.querySelector("form");this.addressForm&&(this.submitButton=this.addressForm.querySelector('button[type="submit"]'),this.submitButton&&this.submitButton.removeAttribute("disabled"),clearInputErrors(this.addressForm),this.addressForm.addEventListener("submit",this._handleAddressSubmit.bind(this)))}_getElements(){const container=document.querySelector(selectors.customerAddresses);return container?{container,deleteButtons:container.querySelectorAll(selectors.deleteAddressButton),countrySelects:container.querySelectorAll(selectors.addressCountrySelect)}:{}}_setupCountries(){Shopify&&Shopify.CountryProvinceSelector&&(this.elements.container.querySelector("#AddressCountryNew")&&new Shopify.CountryProvinceSelector("AddressCountryNew","AddressProvinceNew",{hideElement:"AddressProvinceContainerNew"}),this.elements.countrySelects.forEach(select=>{const formId=select.dataset.formId;new Shopify.CountryProvinceSelector(`AddressCountry_${formId}`,`AddressProvince_${formId}`,{hideElement:`AddressProvinceContainer_${formId}`})}))}_setupEventListeners(){this.elements.deleteButtons.forEach(element=>{element.addEventListener("click",this._handleDeleteButtonClick)})}_handleDeleteButtonClick({currentTarget}){confirm(currentTarget.getAttribute(attributes.confirmMessage))&&Shopify.postLink(currentTarget.dataset.target,{parameters:{_method:"delete"}})}_handleAddressSubmit(evt){validateForm(this.addressForm)?this.submitButton&&this.submitButton.classList.add("btn--loading"):evt.preventDefault()}}class CustomerLogin{constructor(){this.loginContainer=document.getElementById("login"),this.submitLoginButton=this.loginContainer.querySelector('button[type="submit"]'),this.loginContainer.querySelectorAll('.field-wrapper__input[aria-required="true"]').forEach(formInput=>{formInput.addEventListener("focusout",this._handleFocus.bind(this))}),clearInputErrors(this.loginContainer),this.rmCheck=this.loginContainer.querySelector("#rememberCheckBox"),this.emailInput=this.loginContainer.querySelector("#CustomerEmail"),this.passwordInput=this.loginContainer.querySelector("#CustomerPassword"),this.loginContainer.addEventListener("submit",this._handleLoginSubmit.bind(this)),this._setRememberLogin(),this.recoverContainer=document.getElementById("recover"),this.submitRecoverButton=this.recoverContainer.querySelector('button[type="submit"]'),this.recoverContainer.querySelector('.field-wrapper__input[aria-required="true"]').addEventListener("focusout",this._handleFocus.bind(this)),clearInputErrors(this.recoverContainer),this.recoverContainer.addEventListener("submit",this._handleRecoverSubmit.bind(this))}_handleFocus(evt){const targetElm=evt.target;validateFormInput(targetElm)}_setRememberLogin(){localStorage.checkbox&&localStorage.username&&localStorage.pass?(this.rmCheck.setAttribute("checked","checked"),this.emailInput.value=localStorage.username,this.passwordInput.value=localStorage.pass):(this.rmCheck.removeAttribute("checked"),this.emailInput.value="",this.passwordInput.value="")}_handleLoginSubmit(evt){this.loginContainer.querySelectorAll('input[aria_invalid="true"]').length?evt.preventDefault():validateForm(this.loginContainer)?(this.rmCheck.checked&&this.emailInput.value!==""?(localStorage.username=this.emailInput.value,localStorage.pass=this.passwordInput.value,localStorage.checkbox=this.rmCheck.value):(localStorage.username="",localStorage.pass="",localStorage.checkbox=""),this.submitLoginButton&&this.submitLoginButton.classList.add("btn--loading")):evt.preventDefault()}_handleRecoverSubmit(evt){this.recoverContainer.querySelectorAll('input[aria_invalid="true"]').length?evt.preventDefault():validateForm(this.recoverContainer)?this.submitRecoverButton&&this.submitRecoverButton.classList.add("btn--loading"):evt.preventDefault()}}class CustomerRegister{constructor(){this.registerFrom=document.getElementById("RegisterForm"),this.submitRegisterButton=this.registerFrom.querySelector('button[type="submit"]'),this.registerFrom.querySelectorAll('.field-wrapper__input[aria-required="true"]').forEach(formInput=>{formInput.addEventListener("focusout",this._handleFocus.bind(this))}),clearInputErrors(this.registerFrom),this.registerFrom.addEventListener("submit",this._handleRegisterSubmit.bind(this))}_handleFocus(evt){const targetElm=evt.target;validateFormInput(targetElm)}_handleRegisterSubmit(evt){this.registerFrom.querySelectorAll('input[aria_invalid="true"]').length?evt.preventDefault():validateForm(this.registerFrom)?this.submitRegisterButton&&this.submitRegisterButton.classList.add("btn--loading"):evt.preventDefault()}}class ComfirmPassword{constructor(){this.confirmPasswordForm=document.getElementById("ActivateForm")||document.getElementById("ResetForm"),this.submitActivateButton=this.confirmPasswordForm.querySelector('button[type="submit"]'),this.formRequirement=this.confirmPasswordForm.querySelector(".requirement-form"),this.formErrorMessage=this.confirmPasswordForm.querySelector(".form-message--error");const formActiveInputs=this.confirmPasswordForm.querySelectorAll('.field-wrapper__input[aria-required="true"]');this.formActiveInputs=formActiveInputs,formActiveInputs.forEach(formInput=>{formInput.addEventListener("focusout",this._handleFocus.bind(this))}),clearInputErrors(this.confirmPasswordForm),this.submitActivateButton.addEventListener("click",this._handleSubmit.bind(this))}_handleFocus(evt){const targetElm=evt.target;validateFormInput(targetElm)}_handleSubmit(evt){const activeErrors=this.confirmPasswordForm.querySelectorAll('input[aria_invalid="true"]'),target=evt.target;activeErrors.length?evt.preventDefault():validateForm(this.confirmPasswordForm)?(this.formActiveInputs[0],this.formActiveInputs[0].value!==this.formActiveInputs[1].value?(this.formRequirement.classList.add("hide"),this.formErrorMessage.classList.remove("hide"),this.formErrorMessage.innerHTML=window.loginStrings.errorPasswordMustMatch,this.formActiveInputs.forEach(passwordField=>{const fieldWrapper=passwordField.parentElement;passwordField.classList.add("input--error"),fieldWrapper.querySelector(".field-wrapper__icon-error").classList.remove("hide")}),evt.preventDefault()):this.submitActivateButton&&this.submitActivateButton.classList.add("btn--loading")):evt.preventDefault()}}
//# sourceMappingURL=/cdn/shop/t/33/assets/customer.js.map?v=121155493951350800451749835974
